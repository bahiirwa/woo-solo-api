name: Run code quality checks

on:
    pull_request:
        branches: [master, develop]
    push:
        branches: [master]

jobs:
    phpcs_check:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [7.2, 7.3, 7.4]

        name: PHPCS ${{ matrix.php }} checks
        steps:
            # Checkout repository
            - name: Checkout
              uses: actions/checkout@v2

            # Setup PHP versions, run checks
            - name: PHP Setup
              uses: shivammathur/setup-php@2.1.4
              with:
                php-version: ${{ matrix.php }}
                coverage: pcov

            - name: Install composer packages
              run: composer install --no-progress

            - name: Check coding standards using phpcs
              run: composer standards:check -- --runtime-set testVersion ${{ matrix.php }}-

    phpstan:
        runs-on: ubuntu-latest
        name: phpstan check
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: PHP Setup
              uses: shivammathur/setup-php@2.1.4
              with:
                php-version: 7.2
                coverage: pcov

            - name: Install composer packages
              run: composer install --no-progress

            - name: Analyse code using phpstan
              run: composer analyze

    tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                node_version: [ 14 ]
                php: [7.2, 7.3, 7.4]

        name: Integration tests on version ${{ matrix.php }}
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: PHP Setup
              uses: shivammathur/setup-php@2.1.4
              with:
                php-version: ${{ matrix.php }}
                coverage: pcov

            - name: Set Node.js version ${{ matrix.node_version }}
              uses: actions/setup-node@v1.4.2
              with:
                node-version: ${{ matrix.node_version }}

            # Setup WordPress so that we can run tests
            - name: Set up WordPress instance so that we can run tests
              run: |
                curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                chmod +x wp-cli.phar
                sudo mv wp-cli.phar /usr/local/bin/wp
                wp core download

            - name: Install composer packages
              run: composer install --no-progress

            - name: Install node packages
              run: npm install

            - name: Run integration tests
              run: composer test:integration

    tests_coverage:
        runs-on: ubuntu-latest

        name: Code coverage generation
        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup PHP, run code coverage
              env:
                CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
              uses: shivammathur/setup-php@2.1.4
              with:
                php-version: 7.2
                coverage: pcov

            - name: Set Node.js version ${{ matrix.node_version }}
              uses: actions/setup-node@v1.4.2
              with:
                node-version: 14

            - name: Set up WordPress instance so that we can run tests
              run: |
                curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
                chmod +x wp-cli.phar
                sudo mv wp-cli.phar /usr/local/bin/wp
                wp core download

            - name: Install composer packages
              run: composer install --no-progress

            - name: Install node packages
              run: npm install

            - name: Run integration tests
              run: composer test:integration

            - name: Push coverage report to codecov
              run: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
